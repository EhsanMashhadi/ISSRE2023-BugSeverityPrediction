Training/evaluation parameters Namespace(train_data_file='../../../dataset/train_scaled.jsonl', output_dir='./saved_models', model_arch='CodeBERT', eval_data_file='../../../dataset/valid_scaled.jsonl', test_data_file='../../../dataset/test_scaled.jsonl', model_name_or_path='microsoft/codebert-base', tokenizer_name='microsoft/codebert-base', block_size=512, do_train=True, do_eval=False, do_test=False, eval_batch_size=16, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, warmup_steps=0, seed=123456, num_train_epochs=40, num_finetune_epochs=5, train_learning_rate=0.0001, finetune_learning_rate=2e-05, train_batch_size=32, finetune_batch_size=4, n_gpu=0, device=device(type='cpu'))
*** Example ***
label: 2
input_tokens: ['<s>', 'Function', 'Type', '_build', 'And', 'Register', '()', '_{', '_if', '_(', 'return', 'Type', '_==', '_null', ')', '_{', '_return', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'get', 'Native', 'Type', '(', 'UN', 'KNOWN', '_', 'TYPE', ');', '_}', '_if', '_(', 'param', 'eters', 'Node', '_==', '_null', ')', '_{', '_throw', '_new', '_Illegal', 'State', 'Exception', '("', 'All', '_Function', '_types', '_must', '_have', '_params', '_and', '_a', '_return', '_type', '");', '_}', '_Function', 'Type', '_fn', 'Type', ';', '_if', '_(', 'is', 'Construct', 'or', ')', '_{', '_fn', 'Type', '_=', '_get', 'Or', 'Create', 'Construct', 'or', '();', '_}', '_else', '_if', '_(', 'is', 'Interface', ')', '_{', '_fn', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'create', 'Interface', 'Type', '(', 'fn', 'Name', ',', '_source', 'Node', ');', '_if', '_(', 'scope', '.', 'is', 'Global', '()', '_&&', '_!', 'fn', 'Name', '.', 'is', 'Empty', '())', '_{', '_type', 'Reg', 'istry', '.', 'decl', 'are', 'Type', '(', 'fn', 'Name', ',', '_fn', 'Type', '.', 'get', 'Instance', 'Type', '());', '_}', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_else', '_{', '_fn', 'Type', '_=', '_new', '_Function', 'Builder', '(', 'type', 'Reg', 'istry', ').', 'with', 'Name', '(', 'fn', 'Name', ').', 'with', 'Source', 'Node', '(', 'source', 'Node', ').', 'with', 'Par', 'ams', 'Node', '(', 'param', 'eters', 'Node', ').', 'with', 'Return', 'Type', '(', 'return', 'Type', ').', 'with', 'Type', 'Of', 'This', '(', 'this', 'Type', ').', 'with', 'Template', 'Name', '(', 'template', 'Type', 'Name', ').', 'build', '();', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_if', '_(', 'im', 'ple', 'mented', 'Inter', 'faces', '_!=', '_null', ')', '_{', '_fn', 'Type', '.', 'set', 'Im', 'ple', 'mented', 'Inter', 'faces', '(', 'im', 'ple', 'mented', 'Inter', 'faces', ');', '_}', '_type', 'Reg', 'istry', '.', 'clear', 'Template', 'Type', 'Name', '();', '_return', '_fn', 'Type', ';', '_}', '</s>']
input_ids: 0 47802 40118 1119 2409 44539 43048 25522 114 36 30921 40118 45994 23796 43 25522 671 40118 5457 1907 23007 20217 4 6460 45339 40118 1640 4154 47300 1215 48710 4397 35524 114 36 46669 20413 48271 45994 23796 43 25522 3211 92 36993 13360 48847 46469 3684 42419 3505 531 33 49658 8 10 671 1907 45751 35524 42419 40118 48930 40118 131 114 36 354 48402 368 43 25522 48930 40118 5457 120 11094 44758 48402 368 47006 35524 1493 114 36 354 49136 43 25522 48930 40118 5457 1907 23007 20217 4 32845 49136 40118 1640 42441 31723 6 1300 48271 4397 114 36 39576 4 354 18811 43048 48200 27785 42441 31723 4 354 47819 49338 25522 1907 23007 20217 4 32639 1322 40118 1640 42441 31723 6 48930 40118 4 6460 49483 40118 49291 35524 2085 28512 34164 40118 1640 42441 40118 4397 35524 1493 25522 48930 40118 5457 92 42419 45200 1640 12528 23007 20217 322 5632 31723 1640 42441 31723 322 5632 7061 48271 1640 17747 48271 322 5632 22011 7042 48271 1640 46669 20413 48271 322 5632 42555 40118 1640 30921 40118 322 5632 40118 10643 713 1640 9226 40118 322 5632 49522 31723 1640 48790 40118 31723 322 23411 47006 2085 28512 34164 40118 1640 42441 40118 4397 35524 114 36 757 8293 19601 26267 40289 49333 23796 43 25522 48930 40118 4 8738 20470 8293 19601 26267 40289 1640 757 8293 19601 26267 40289 4397 35524 1907 23007 20217 4 18763 49522 40118 31723 47006 671 48930 40118 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 1
input_tokens: ['<s>', 'public', '_boolean', '_is', 'State', 'less', '(', 'Component', '_component', ')', '_{', '_return', '_false', ';', '_}', '</s>']
input_ids: 0 15110 49378 16 13360 1672 1640 48767 7681 43 25522 671 3950 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 3
input_tokens: ['<s>', 'private', '_static', '_int', '_greatest', 'Common', 'Div', 'is', 'or', '(', 'int', '_u', ',', '_int', '_v', ')', '_{', '_if', '_(', 'Math', '.', 'abs', '(', 'u', ')', '_<=', '_1', '_||', '_Math', '.', 'abs', '(', 'v', ')', '_<=', '_1', ')', '_{', '_return', '_1', ';', '_}', '_if', '_(', 'u', '_>', '_0', ')', '_{', '_u', '_=', '_-', 'u', ';', '_}', '_if', '_(', 'v', '_>', '_0', ')', '_{', '_v', '_=', '_-', 'v', ';', '_}', '_int', '_k', '_=', '_0', ';', '_while', '_((', 'u', '_&', '_1', ')', '_==', '_0', '_&&', '_(', 'v', '_&', '_1', ')', '_==', '_0', '_&&', '_k', '_<', '_31', ')', '_{', '_u', '_/', '=', '_2', ';', '_v', '_/', '=', '_2', ';', '_k', '++;', '_}', '_if', '_(', 'k', '_==', '_31', ')', '_{', '_throw', '_new', '_Ar', 'ithmetic', 'Exception', '("', 'over', 'flow', ':', '_g', 'cd', '_is', '_2', '^', '31', '");', '_}', '_int', '_t', '_=', '_((', 'u', '_&', '_1', ')', '_==', '_1', ')', '_?', '_v', '_:', '_-', '(', 'u', '_/', '_2', ');', '_do', '_{', '_while', '_((', 't', '_&', '_1', ')', '_==', '_0', ')', '_{', '_t', '_/', '=', '_2', ';', '_}', '_if', '_(', 't', '_>', '_0', ')', '_{', '_u', '_=', '_-', 't', ';', '_}', '_else', '_{', '_v', '_=', '_t', ';', '_}', '_t', '_=', '_(', 'v', '_-', '_u', ')', '_/', '_2', ';', '_}', '_while', '_(', 't', '_!=', '_0', ');', '_return', '_-', 'u', '_*', '_(', '1', '_<<', '_k', ');', '_}', '</s>']
input_ids: 0 22891 25156 6979 3968 40437 37165 354 368 1640 2544 1717 6 6979 748 43 25522 114 36 44853 4 10155 1640 257 43 49230 112 45056 11945 4 10155 1640 705 43 49230 112 43 25522 671 112 131 35524 114 36 257 8061 321 43 25522 1717 5457 111 257 131 35524 114 36 705 8061 321 43 25522 748 5457 111 705 131 35524 6979 449 5457 321 131 150 41006 257 359 112 43 45994 321 48200 36 705 359 112 43 45994 321 48200 449 28696 1105 43 25522 1717 1589 5214 132 131 748 1589 5214 132 131 449 49789 35524 114 36 330 45994 1105 43 25522 3211 92 1586 48961 48847 46469 2137 19322 35 821 28690 16 132 35227 2983 45751 35524 6979 326 5457 41006 257 359 112 43 45994 112 43 17487 748 4832 111 1640 257 1589 132 4397 109 25522 150 41006 90 359 112 43 45994 321 43 25522 326 1589 5214 132 131 35524 114 36 90 8061 321 43 25522 1717 5457 111 90 131 35524 1493 25522 748 5457 326 131 35524 326 5457 36 705 111 1717 43 1589 132 131 35524 150 36 90 49333 321 4397 671 111 257 1009 36 134 48188 449 4397 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
total param 593668
***** Running Training *****
  Num examples = 2414
  Num Epochs = 40
  batch size = 32
  Total optimization steps = 3040
Training/evaluation parameters Namespace(train_data_file='../../../dataset/train_scaled.jsonl', output_dir='./saved_models', model_arch='CodeBERT', eval_data_file='../../../dataset/valid_scaled.jsonl', test_data_file='../../../dataset/test_scaled.jsonl', model_name_or_path='microsoft/codebert-base', tokenizer_name='microsoft/codebert-base', block_size=512, do_train=True, do_eval=False, do_test=False, eval_batch_size=16, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, warmup_steps=0, seed=123456, num_train_epochs=40, num_finetune_epochs=5, train_learning_rate=0.0001, finetune_learning_rate=2e-05, train_batch_size=32, finetune_batch_size=4, n_gpu=0, device=device(type='cpu'))
*** Example ***
label: 2
input_tokens: ['<s>', 'Function', 'Type', '_build', 'And', 'Register', '()', '_{', '_if', '_(', 'return', 'Type', '_==', '_null', ')', '_{', '_return', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'get', 'Native', 'Type', '(', 'UN', 'KNOWN', '_', 'TYPE', ');', '_}', '_if', '_(', 'param', 'eters', 'Node', '_==', '_null', ')', '_{', '_throw', '_new', '_Illegal', 'State', 'Exception', '("', 'All', '_Function', '_types', '_must', '_have', '_params', '_and', '_a', '_return', '_type', '");', '_}', '_Function', 'Type', '_fn', 'Type', ';', '_if', '_(', 'is', 'Construct', 'or', ')', '_{', '_fn', 'Type', '_=', '_get', 'Or', 'Create', 'Construct', 'or', '();', '_}', '_else', '_if', '_(', 'is', 'Interface', ')', '_{', '_fn', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'create', 'Interface', 'Type', '(', 'fn', 'Name', ',', '_source', 'Node', ');', '_if', '_(', 'scope', '.', 'is', 'Global', '()', '_&&', '_!', 'fn', 'Name', '.', 'is', 'Empty', '())', '_{', '_type', 'Reg', 'istry', '.', 'decl', 'are', 'Type', '(', 'fn', 'Name', ',', '_fn', 'Type', '.', 'get', 'Instance', 'Type', '());', '_}', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_else', '_{', '_fn', 'Type', '_=', '_new', '_Function', 'Builder', '(', 'type', 'Reg', 'istry', ').', 'with', 'Name', '(', 'fn', 'Name', ').', 'with', 'Source', 'Node', '(', 'source', 'Node', ').', 'with', 'Par', 'ams', 'Node', '(', 'param', 'eters', 'Node', ').', 'with', 'Return', 'Type', '(', 'return', 'Type', ').', 'with', 'Type', 'Of', 'This', '(', 'this', 'Type', ').', 'with', 'Template', 'Name', '(', 'template', 'Type', 'Name', ').', 'build', '();', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_if', '_(', 'im', 'ple', 'mented', 'Inter', 'faces', '_!=', '_null', ')', '_{', '_fn', 'Type', '.', 'set', 'Im', 'ple', 'mented', 'Inter', 'faces', '(', 'im', 'ple', 'mented', 'Inter', 'faces', ');', '_}', '_type', 'Reg', 'istry', '.', 'clear', 'Template', 'Type', 'Name', '();', '_return', '_fn', 'Type', ';', '_}', '</s>']
input_ids: 0 47802 40118 1119 2409 44539 43048 25522 114 36 30921 40118 45994 23796 43 25522 671 40118 5457 1907 23007 20217 4 6460 45339 40118 1640 4154 47300 1215 48710 4397 35524 114 36 46669 20413 48271 45994 23796 43 25522 3211 92 36993 13360 48847 46469 3684 42419 3505 531 33 49658 8 10 671 1907 45751 35524 42419 40118 48930 40118 131 114 36 354 48402 368 43 25522 48930 40118 5457 120 11094 44758 48402 368 47006 35524 1493 114 36 354 49136 43 25522 48930 40118 5457 1907 23007 20217 4 32845 49136 40118 1640 42441 31723 6 1300 48271 4397 114 36 39576 4 354 18811 43048 48200 27785 42441 31723 4 354 47819 49338 25522 1907 23007 20217 4 32639 1322 40118 1640 42441 31723 6 48930 40118 4 6460 49483 40118 49291 35524 2085 28512 34164 40118 1640 42441 40118 4397 35524 1493 25522 48930 40118 5457 92 42419 45200 1640 12528 23007 20217 322 5632 31723 1640 42441 31723 322 5632 7061 48271 1640 17747 48271 322 5632 22011 7042 48271 1640 46669 20413 48271 322 5632 42555 40118 1640 30921 40118 322 5632 40118 10643 713 1640 9226 40118 322 5632 49522 31723 1640 48790 40118 31723 322 23411 47006 2085 28512 34164 40118 1640 42441 40118 4397 35524 114 36 757 8293 19601 26267 40289 49333 23796 43 25522 48930 40118 4 8738 20470 8293 19601 26267 40289 1640 757 8293 19601 26267 40289 4397 35524 1907 23007 20217 4 18763 49522 40118 31723 47006 671 48930 40118 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 1
input_tokens: ['<s>', 'public', '_boolean', '_is', 'State', 'less', '(', 'Component', '_component', ')', '_{', '_return', '_false', ';', '_}', '</s>']
input_ids: 0 15110 49378 16 13360 1672 1640 48767 7681 43 25522 671 3950 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 3
input_tokens: ['<s>', 'private', '_static', '_int', '_greatest', 'Common', 'Div', 'is', 'or', '(', 'int', '_u', ',', '_int', '_v', ')', '_{', '_if', '_(', 'Math', '.', 'abs', '(', 'u', ')', '_<=', '_1', '_||', '_Math', '.', 'abs', '(', 'v', ')', '_<=', '_1', ')', '_{', '_return', '_1', ';', '_}', '_if', '_(', 'u', '_>', '_0', ')', '_{', '_u', '_=', '_-', 'u', ';', '_}', '_if', '_(', 'v', '_>', '_0', ')', '_{', '_v', '_=', '_-', 'v', ';', '_}', '_int', '_k', '_=', '_0', ';', '_while', '_((', 'u', '_&', '_1', ')', '_==', '_0', '_&&', '_(', 'v', '_&', '_1', ')', '_==', '_0', '_&&', '_k', '_<', '_31', ')', '_{', '_u', '_/', '=', '_2', ';', '_v', '_/', '=', '_2', ';', '_k', '++;', '_}', '_if', '_(', 'k', '_==', '_31', ')', '_{', '_throw', '_new', '_Ar', 'ithmetic', 'Exception', '("', 'over', 'flow', ':', '_g', 'cd', '_is', '_2', '^', '31', '");', '_}', '_int', '_t', '_=', '_((', 'u', '_&', '_1', ')', '_==', '_1', ')', '_?', '_v', '_:', '_-', '(', 'u', '_/', '_2', ');', '_do', '_{', '_while', '_((', 't', '_&', '_1', ')', '_==', '_0', ')', '_{', '_t', '_/', '=', '_2', ';', '_}', '_if', '_(', 't', '_>', '_0', ')', '_{', '_u', '_=', '_-', 't', ';', '_}', '_else', '_{', '_v', '_=', '_t', ';', '_}', '_t', '_=', '_(', 'v', '_-', '_u', ')', '_/', '_2', ';', '_}', '_while', '_(', 't', '_!=', '_0', ');', '_return', '_-', 'u', '_*', '_(', '1', '_<<', '_k', ');', '_}', '</s>']
input_ids: 0 22891 25156 6979 3968 40437 37165 354 368 1640 2544 1717 6 6979 748 43 25522 114 36 44853 4 10155 1640 257 43 49230 112 45056 11945 4 10155 1640 705 43 49230 112 43 25522 671 112 131 35524 114 36 257 8061 321 43 25522 1717 5457 111 257 131 35524 114 36 705 8061 321 43 25522 748 5457 111 705 131 35524 6979 449 5457 321 131 150 41006 257 359 112 43 45994 321 48200 36 705 359 112 43 45994 321 48200 449 28696 1105 43 25522 1717 1589 5214 132 131 748 1589 5214 132 131 449 49789 35524 114 36 330 45994 1105 43 25522 3211 92 1586 48961 48847 46469 2137 19322 35 821 28690 16 132 35227 2983 45751 35524 6979 326 5457 41006 257 359 112 43 45994 112 43 17487 748 4832 111 1640 257 1589 132 4397 109 25522 150 41006 90 359 112 43 45994 321 43 25522 326 1589 5214 132 131 35524 114 36 90 8061 321 43 25522 1717 5457 111 90 131 35524 1493 25522 748 5457 326 131 35524 326 5457 36 705 111 1717 43 1589 132 131 35524 150 36 90 49333 321 4397 671 111 257 1009 36 134 48188 449 4397 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
total param 593668
***** Running Training *****
  Num examples = 10
  Num Epochs = 40
  batch size = 32
  Total optimization steps = 40
***** Running evaluation *****
  Num examples = 10
  Batch size = 16
Training/evaluation parameters Namespace(train_data_file='../../../dataset/train_scaled.jsonl', output_dir='./saved_models', model_arch='CodeBERT', eval_data_file='../../../dataset/valid_scaled.jsonl', test_data_file='../../../dataset/test_scaled.jsonl', model_name_or_path='microsoft/codebert-base', tokenizer_name='microsoft/codebert-base', block_size=512, do_train=True, do_eval=False, do_test=False, eval_batch_size=16, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, warmup_steps=0, seed=123456, num_train_epochs=40, num_finetune_epochs=5, train_learning_rate=0.0001, finetune_learning_rate=2e-05, train_batch_size=32, finetune_batch_size=4, n_gpu=0, device=device(type='cpu'))
*** Example ***
label: 2
input_tokens: ['<s>', 'Function', 'Type', '_build', 'And', 'Register', '()', '_{', '_if', '_(', 'return', 'Type', '_==', '_null', ')', '_{', '_return', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'get', 'Native', 'Type', '(', 'UN', 'KNOWN', '_', 'TYPE', ');', '_}', '_if', '_(', 'param', 'eters', 'Node', '_==', '_null', ')', '_{', '_throw', '_new', '_Illegal', 'State', 'Exception', '("', 'All', '_Function', '_types', '_must', '_have', '_params', '_and', '_a', '_return', '_type', '");', '_}', '_Function', 'Type', '_fn', 'Type', ';', '_if', '_(', 'is', 'Construct', 'or', ')', '_{', '_fn', 'Type', '_=', '_get', 'Or', 'Create', 'Construct', 'or', '();', '_}', '_else', '_if', '_(', 'is', 'Interface', ')', '_{', '_fn', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'create', 'Interface', 'Type', '(', 'fn', 'Name', ',', '_source', 'Node', ');', '_if', '_(', 'scope', '.', 'is', 'Global', '()', '_&&', '_!', 'fn', 'Name', '.', 'is', 'Empty', '())', '_{', '_type', 'Reg', 'istry', '.', 'decl', 'are', 'Type', '(', 'fn', 'Name', ',', '_fn', 'Type', '.', 'get', 'Instance', 'Type', '());', '_}', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_else', '_{', '_fn', 'Type', '_=', '_new', '_Function', 'Builder', '(', 'type', 'Reg', 'istry', ').', 'with', 'Name', '(', 'fn', 'Name', ').', 'with', 'Source', 'Node', '(', 'source', 'Node', ').', 'with', 'Par', 'ams', 'Node', '(', 'param', 'eters', 'Node', ').', 'with', 'Return', 'Type', '(', 'return', 'Type', ').', 'with', 'Type', 'Of', 'This', '(', 'this', 'Type', ').', 'with', 'Template', 'Name', '(', 'template', 'Type', 'Name', ').', 'build', '();', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_if', '_(', 'im', 'ple', 'mented', 'Inter', 'faces', '_!=', '_null', ')', '_{', '_fn', 'Type', '.', 'set', 'Im', 'ple', 'mented', 'Inter', 'faces', '(', 'im', 'ple', 'mented', 'Inter', 'faces', ');', '_}', '_type', 'Reg', 'istry', '.', 'clear', 'Template', 'Type', 'Name', '();', '_return', '_fn', 'Type', ';', '_}', '</s>']
input_ids: 0 47802 40118 1119 2409 44539 43048 25522 114 36 30921 40118 45994 23796 43 25522 671 40118 5457 1907 23007 20217 4 6460 45339 40118 1640 4154 47300 1215 48710 4397 35524 114 36 46669 20413 48271 45994 23796 43 25522 3211 92 36993 13360 48847 46469 3684 42419 3505 531 33 49658 8 10 671 1907 45751 35524 42419 40118 48930 40118 131 114 36 354 48402 368 43 25522 48930 40118 5457 120 11094 44758 48402 368 47006 35524 1493 114 36 354 49136 43 25522 48930 40118 5457 1907 23007 20217 4 32845 49136 40118 1640 42441 31723 6 1300 48271 4397 114 36 39576 4 354 18811 43048 48200 27785 42441 31723 4 354 47819 49338 25522 1907 23007 20217 4 32639 1322 40118 1640 42441 31723 6 48930 40118 4 6460 49483 40118 49291 35524 2085 28512 34164 40118 1640 42441 40118 4397 35524 1493 25522 48930 40118 5457 92 42419 45200 1640 12528 23007 20217 322 5632 31723 1640 42441 31723 322 5632 7061 48271 1640 17747 48271 322 5632 22011 7042 48271 1640 46669 20413 48271 322 5632 42555 40118 1640 30921 40118 322 5632 40118 10643 713 1640 9226 40118 322 5632 49522 31723 1640 48790 40118 31723 322 23411 47006 2085 28512 34164 40118 1640 42441 40118 4397 35524 114 36 757 8293 19601 26267 40289 49333 23796 43 25522 48930 40118 4 8738 20470 8293 19601 26267 40289 1640 757 8293 19601 26267 40289 4397 35524 1907 23007 20217 4 18763 49522 40118 31723 47006 671 48930 40118 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 1
input_tokens: ['<s>', 'public', '_boolean', '_is', 'State', 'less', '(', 'Component', '_component', ')', '_{', '_return', '_false', ';', '_}', '</s>']
input_ids: 0 15110 49378 16 13360 1672 1640 48767 7681 43 25522 671 3950 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 3
input_tokens: ['<s>', 'private', '_static', '_int', '_greatest', 'Common', 'Div', 'is', 'or', '(', 'int', '_u', ',', '_int', '_v', ')', '_{', '_if', '_(', 'Math', '.', 'abs', '(', 'u', ')', '_<=', '_1', '_||', '_Math', '.', 'abs', '(', 'v', ')', '_<=', '_1', ')', '_{', '_return', '_1', ';', '_}', '_if', '_(', 'u', '_>', '_0', ')', '_{', '_u', '_=', '_-', 'u', ';', '_}', '_if', '_(', 'v', '_>', '_0', ')', '_{', '_v', '_=', '_-', 'v', ';', '_}', '_int', '_k', '_=', '_0', ';', '_while', '_((', 'u', '_&', '_1', ')', '_==', '_0', '_&&', '_(', 'v', '_&', '_1', ')', '_==', '_0', '_&&', '_k', '_<', '_31', ')', '_{', '_u', '_/', '=', '_2', ';', '_v', '_/', '=', '_2', ';', '_k', '++;', '_}', '_if', '_(', 'k', '_==', '_31', ')', '_{', '_throw', '_new', '_Ar', 'ithmetic', 'Exception', '("', 'over', 'flow', ':', '_g', 'cd', '_is', '_2', '^', '31', '");', '_}', '_int', '_t', '_=', '_((', 'u', '_&', '_1', ')', '_==', '_1', ')', '_?', '_v', '_:', '_-', '(', 'u', '_/', '_2', ');', '_do', '_{', '_while', '_((', 't', '_&', '_1', ')', '_==', '_0', ')', '_{', '_t', '_/', '=', '_2', ';', '_}', '_if', '_(', 't', '_>', '_0', ')', '_{', '_u', '_=', '_-', 't', ';', '_}', '_else', '_{', '_v', '_=', '_t', ';', '_}', '_t', '_=', '_(', 'v', '_-', '_u', ')', '_/', '_2', ';', '_}', '_while', '_(', 't', '_!=', '_0', ');', '_return', '_-', 'u', '_*', '_(', '1', '_<<', '_k', ');', '_}', '</s>']
input_ids: 0 22891 25156 6979 3968 40437 37165 354 368 1640 2544 1717 6 6979 748 43 25522 114 36 44853 4 10155 1640 257 43 49230 112 45056 11945 4 10155 1640 705 43 49230 112 43 25522 671 112 131 35524 114 36 257 8061 321 43 25522 1717 5457 111 257 131 35524 114 36 705 8061 321 43 25522 748 5457 111 705 131 35524 6979 449 5457 321 131 150 41006 257 359 112 43 45994 321 48200 36 705 359 112 43 45994 321 48200 449 28696 1105 43 25522 1717 1589 5214 132 131 748 1589 5214 132 131 449 49789 35524 114 36 330 45994 1105 43 25522 3211 92 1586 48961 48847 46469 2137 19322 35 821 28690 16 132 35227 2983 45751 35524 6979 326 5457 41006 257 359 112 43 45994 112 43 17487 748 4832 111 1640 257 1589 132 4397 109 25522 150 41006 90 359 112 43 45994 321 43 25522 326 1589 5214 132 131 35524 114 36 90 8061 321 43 25522 1717 5457 111 90 131 35524 1493 25522 748 5457 326 131 35524 326 5457 36 705 111 1717 43 1589 132 131 35524 150 36 90 49333 321 4397 671 111 257 1009 36 134 48188 449 4397 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
total param 593668
***** Running Training *****
  Num examples = 10
  Num Epochs = 40
  batch size = 32
  Total optimization steps = 40
***** Running evaluation *****
  Num examples = 10
  Batch size = 16
Training/evaluation parameters Namespace(train_data_file='../../../dataset/train_scaled.jsonl', output_dir='./saved_models', model_arch='CodeBERT', eval_data_file='../../../dataset/valid_scaled.jsonl', test_data_file='../../../dataset/test_scaled.jsonl', model_name_or_path='microsoft/codebert-base', tokenizer_name='microsoft/codebert-base', block_size=512, do_train=True, do_eval=False, do_test=False, eval_batch_size=16, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, warmup_steps=0, seed=123456, num_train_epochs=40, num_finetune_epochs=5, train_learning_rate=0.0001, finetune_learning_rate=2e-05, train_batch_size=32, finetune_batch_size=4, n_gpu=0, device=device(type='cpu'))
*** Example ***
label: 2
input_tokens: ['<s>', 'Function', 'Type', '_build', 'And', 'Register', '()', '_{', '_if', '_(', 'return', 'Type', '_==', '_null', ')', '_{', '_return', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'get', 'Native', 'Type', '(', 'UN', 'KNOWN', '_', 'TYPE', ');', '_}', '_if', '_(', 'param', 'eters', 'Node', '_==', '_null', ')', '_{', '_throw', '_new', '_Illegal', 'State', 'Exception', '("', 'All', '_Function', '_types', '_must', '_have', '_params', '_and', '_a', '_return', '_type', '");', '_}', '_Function', 'Type', '_fn', 'Type', ';', '_if', '_(', 'is', 'Construct', 'or', ')', '_{', '_fn', 'Type', '_=', '_get', 'Or', 'Create', 'Construct', 'or', '();', '_}', '_else', '_if', '_(', 'is', 'Interface', ')', '_{', '_fn', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'create', 'Interface', 'Type', '(', 'fn', 'Name', ',', '_source', 'Node', ');', '_if', '_(', 'scope', '.', 'is', 'Global', '()', '_&&', '_!', 'fn', 'Name', '.', 'is', 'Empty', '())', '_{', '_type', 'Reg', 'istry', '.', 'decl', 'are', 'Type', '(', 'fn', 'Name', ',', '_fn', 'Type', '.', 'get', 'Instance', 'Type', '());', '_}', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_else', '_{', '_fn', 'Type', '_=', '_new', '_Function', 'Builder', '(', 'type', 'Reg', 'istry', ').', 'with', 'Name', '(', 'fn', 'Name', ').', 'with', 'Source', 'Node', '(', 'source', 'Node', ').', 'with', 'Par', 'ams', 'Node', '(', 'param', 'eters', 'Node', ').', 'with', 'Return', 'Type', '(', 'return', 'Type', ').', 'with', 'Type', 'Of', 'This', '(', 'this', 'Type', ').', 'with', 'Template', 'Name', '(', 'template', 'Type', 'Name', ').', 'build', '();', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_if', '_(', 'im', 'ple', 'mented', 'Inter', 'faces', '_!=', '_null', ')', '_{', '_fn', 'Type', '.', 'set', 'Im', 'ple', 'mented', 'Inter', 'faces', '(', 'im', 'ple', 'mented', 'Inter', 'faces', ');', '_}', '_type', 'Reg', 'istry', '.', 'clear', 'Template', 'Type', 'Name', '();', '_return', '_fn', 'Type', ';', '_}', '</s>']
input_ids: 0 47802 40118 1119 2409 44539 43048 25522 114 36 30921 40118 45994 23796 43 25522 671 40118 5457 1907 23007 20217 4 6460 45339 40118 1640 4154 47300 1215 48710 4397 35524 114 36 46669 20413 48271 45994 23796 43 25522 3211 92 36993 13360 48847 46469 3684 42419 3505 531 33 49658 8 10 671 1907 45751 35524 42419 40118 48930 40118 131 114 36 354 48402 368 43 25522 48930 40118 5457 120 11094 44758 48402 368 47006 35524 1493 114 36 354 49136 43 25522 48930 40118 5457 1907 23007 20217 4 32845 49136 40118 1640 42441 31723 6 1300 48271 4397 114 36 39576 4 354 18811 43048 48200 27785 42441 31723 4 354 47819 49338 25522 1907 23007 20217 4 32639 1322 40118 1640 42441 31723 6 48930 40118 4 6460 49483 40118 49291 35524 2085 28512 34164 40118 1640 42441 40118 4397 35524 1493 25522 48930 40118 5457 92 42419 45200 1640 12528 23007 20217 322 5632 31723 1640 42441 31723 322 5632 7061 48271 1640 17747 48271 322 5632 22011 7042 48271 1640 46669 20413 48271 322 5632 42555 40118 1640 30921 40118 322 5632 40118 10643 713 1640 9226 40118 322 5632 49522 31723 1640 48790 40118 31723 322 23411 47006 2085 28512 34164 40118 1640 42441 40118 4397 35524 114 36 757 8293 19601 26267 40289 49333 23796 43 25522 48930 40118 4 8738 20470 8293 19601 26267 40289 1640 757 8293 19601 26267 40289 4397 35524 1907 23007 20217 4 18763 49522 40118 31723 47006 671 48930 40118 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 1
input_tokens: ['<s>', 'public', '_boolean', '_is', 'State', 'less', '(', 'Component', '_component', ')', '_{', '_return', '_false', ';', '_}', '</s>']
input_ids: 0 15110 49378 16 13360 1672 1640 48767 7681 43 25522 671 3950 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 3
input_tokens: ['<s>', 'private', '_static', '_int', '_greatest', 'Common', 'Div', 'is', 'or', '(', 'int', '_u', ',', '_int', '_v', ')', '_{', '_if', '_(', 'Math', '.', 'abs', '(', 'u', ')', '_<=', '_1', '_||', '_Math', '.', 'abs', '(', 'v', ')', '_<=', '_1', ')', '_{', '_return', '_1', ';', '_}', '_if', '_(', 'u', '_>', '_0', ')', '_{', '_u', '_=', '_-', 'u', ';', '_}', '_if', '_(', 'v', '_>', '_0', ')', '_{', '_v', '_=', '_-', 'v', ';', '_}', '_int', '_k', '_=', '_0', ';', '_while', '_((', 'u', '_&', '_1', ')', '_==', '_0', '_&&', '_(', 'v', '_&', '_1', ')', '_==', '_0', '_&&', '_k', '_<', '_31', ')', '_{', '_u', '_/', '=', '_2', ';', '_v', '_/', '=', '_2', ';', '_k', '++;', '_}', '_if', '_(', 'k', '_==', '_31', ')', '_{', '_throw', '_new', '_Ar', 'ithmetic', 'Exception', '("', 'over', 'flow', ':', '_g', 'cd', '_is', '_2', '^', '31', '");', '_}', '_int', '_t', '_=', '_((', 'u', '_&', '_1', ')', '_==', '_1', ')', '_?', '_v', '_:', '_-', '(', 'u', '_/', '_2', ');', '_do', '_{', '_while', '_((', 't', '_&', '_1', ')', '_==', '_0', ')', '_{', '_t', '_/', '=', '_2', ';', '_}', '_if', '_(', 't', '_>', '_0', ')', '_{', '_u', '_=', '_-', 't', ';', '_}', '_else', '_{', '_v', '_=', '_t', ';', '_}', '_t', '_=', '_(', 'v', '_-', '_u', ')', '_/', '_2', ';', '_}', '_while', '_(', 't', '_!=', '_0', ');', '_return', '_-', 'u', '_*', '_(', '1', '_<<', '_k', ');', '_}', '</s>']
input_ids: 0 22891 25156 6979 3968 40437 37165 354 368 1640 2544 1717 6 6979 748 43 25522 114 36 44853 4 10155 1640 257 43 49230 112 45056 11945 4 10155 1640 705 43 49230 112 43 25522 671 112 131 35524 114 36 257 8061 321 43 25522 1717 5457 111 257 131 35524 114 36 705 8061 321 43 25522 748 5457 111 705 131 35524 6979 449 5457 321 131 150 41006 257 359 112 43 45994 321 48200 36 705 359 112 43 45994 321 48200 449 28696 1105 43 25522 1717 1589 5214 132 131 748 1589 5214 132 131 449 49789 35524 114 36 330 45994 1105 43 25522 3211 92 1586 48961 48847 46469 2137 19322 35 821 28690 16 132 35227 2983 45751 35524 6979 326 5457 41006 257 359 112 43 45994 112 43 17487 748 4832 111 1640 257 1589 132 4397 109 25522 150 41006 90 359 112 43 45994 321 43 25522 326 1589 5214 132 131 35524 114 36 90 8061 321 43 25522 1717 5457 111 90 131 35524 1493 25522 748 5457 326 131 35524 326 5457 36 705 111 1717 43 1589 132 131 35524 150 36 90 49333 321 4397 671 111 257 1009 36 134 48188 449 4397 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
total param 593668
***** Running Training *****
  Num examples = 10
  Num Epochs = 40
  batch size = 32
  Total optimization steps = 40
***** Running evaluation *****
  Num examples = 10
  Batch size = 16
  eval_acc = 0.0
  eval_f1 = 0.0
  eval_f1_perclass = [0. 0. 0. 0.]
  eval_loss = 1.4532
  eval_mcc = -0.147
  eval_precision = 0.0
  eval_recall = 0.0
  Trigger times reset to 0
***** Running evaluation *****
  Num examples = 10
  Batch size = 16
  eval_acc = 0.1
  eval_f1 = 0.0182
  eval_f1_perclass = [0.         0.         0.18181818]
  eval_loss = 1.4235
  eval_mcc = 0.0
  eval_precision = 0.01
  eval_recall = 0.1
  Trigger times reset to 0
  ********************
  Best F1:0.0182
  ********************
Saving model checkpoint to ./saved_models/checkpoint-best-f1/CodeBERT.bin
Training/evaluation parameters Namespace(train_data_file='../../../dataset/train_scaled.jsonl', output_dir='./saved_models', model_arch='CodeBERT', eval_data_file='../../../dataset/valid_scaled.jsonl', test_data_file='../../../dataset/test_scaled.jsonl', model_name_or_path='microsoft/codebert-base', tokenizer_name='microsoft/codebert-base', block_size=512, do_train=True, do_eval=False, do_test=False, eval_batch_size=16, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, warmup_steps=0, seed=123456, num_train_epochs=40, num_finetune_epochs=5, train_learning_rate=0.0001, finetune_learning_rate=2e-05, train_batch_size=32, finetune_batch_size=4, n_gpu=0, device=device(type='cpu'))
*** Example ***
label: 2
input_tokens: ['<s>', 'Function', 'Type', '_build', 'And', 'Register', '()', '_{', '_if', '_(', 'return', 'Type', '_==', '_null', ')', '_{', '_return', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'get', 'Native', 'Type', '(', 'UN', 'KNOWN', '_', 'TYPE', ');', '_}', '_if', '_(', 'param', 'eters', 'Node', '_==', '_null', ')', '_{', '_throw', '_new', '_Illegal', 'State', 'Exception', '("', 'All', '_Function', '_types', '_must', '_have', '_params', '_and', '_a', '_return', '_type', '");', '_}', '_Function', 'Type', '_fn', 'Type', ';', '_if', '_(', 'is', 'Construct', 'or', ')', '_{', '_fn', 'Type', '_=', '_get', 'Or', 'Create', 'Construct', 'or', '();', '_}', '_else', '_if', '_(', 'is', 'Interface', ')', '_{', '_fn', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'create', 'Interface', 'Type', '(', 'fn', 'Name', ',', '_source', 'Node', ');', '_if', '_(', 'scope', '.', 'is', 'Global', '()', '_&&', '_!', 'fn', 'Name', '.', 'is', 'Empty', '())', '_{', '_type', 'Reg', 'istry', '.', 'decl', 'are', 'Type', '(', 'fn', 'Name', ',', '_fn', 'Type', '.', 'get', 'Instance', 'Type', '());', '_}', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_else', '_{', '_fn', 'Type', '_=', '_new', '_Function', 'Builder', '(', 'type', 'Reg', 'istry', ').', 'with', 'Name', '(', 'fn', 'Name', ').', 'with', 'Source', 'Node', '(', 'source', 'Node', ').', 'with', 'Par', 'ams', 'Node', '(', 'param', 'eters', 'Node', ').', 'with', 'Return', 'Type', '(', 'return', 'Type', ').', 'with', 'Type', 'Of', 'This', '(', 'this', 'Type', ').', 'with', 'Template', 'Name', '(', 'template', 'Type', 'Name', ').', 'build', '();', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_if', '_(', 'im', 'ple', 'mented', 'Inter', 'faces', '_!=', '_null', ')', '_{', '_fn', 'Type', '.', 'set', 'Im', 'ple', 'mented', 'Inter', 'faces', '(', 'im', 'ple', 'mented', 'Inter', 'faces', ');', '_}', '_type', 'Reg', 'istry', '.', 'clear', 'Template', 'Type', 'Name', '();', '_return', '_fn', 'Type', ';', '_}', '</s>']
input_ids: 0 47802 40118 1119 2409 44539 43048 25522 114 36 30921 40118 45994 23796 43 25522 671 40118 5457 1907 23007 20217 4 6460 45339 40118 1640 4154 47300 1215 48710 4397 35524 114 36 46669 20413 48271 45994 23796 43 25522 3211 92 36993 13360 48847 46469 3684 42419 3505 531 33 49658 8 10 671 1907 45751 35524 42419 40118 48930 40118 131 114 36 354 48402 368 43 25522 48930 40118 5457 120 11094 44758 48402 368 47006 35524 1493 114 36 354 49136 43 25522 48930 40118 5457 1907 23007 20217 4 32845 49136 40118 1640 42441 31723 6 1300 48271 4397 114 36 39576 4 354 18811 43048 48200 27785 42441 31723 4 354 47819 49338 25522 1907 23007 20217 4 32639 1322 40118 1640 42441 31723 6 48930 40118 4 6460 49483 40118 49291 35524 2085 28512 34164 40118 1640 42441 40118 4397 35524 1493 25522 48930 40118 5457 92 42419 45200 1640 12528 23007 20217 322 5632 31723 1640 42441 31723 322 5632 7061 48271 1640 17747 48271 322 5632 22011 7042 48271 1640 46669 20413 48271 322 5632 42555 40118 1640 30921 40118 322 5632 40118 10643 713 1640 9226 40118 322 5632 49522 31723 1640 48790 40118 31723 322 23411 47006 2085 28512 34164 40118 1640 42441 40118 4397 35524 114 36 757 8293 19601 26267 40289 49333 23796 43 25522 48930 40118 4 8738 20470 8293 19601 26267 40289 1640 757 8293 19601 26267 40289 4397 35524 1907 23007 20217 4 18763 49522 40118 31723 47006 671 48930 40118 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 1
input_tokens: ['<s>', 'public', '_boolean', '_is', 'State', 'less', '(', 'Component', '_component', ')', '_{', '_return', '_false', ';', '_}', '</s>']
input_ids: 0 15110 49378 16 13360 1672 1640 48767 7681 43 25522 671 3950 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 3
input_tokens: ['<s>', 'private', '_static', '_int', '_greatest', 'Common', 'Div', 'is', 'or', '(', 'int', '_u', ',', '_int', '_v', ')', '_{', '_if', '_(', 'Math', '.', 'abs', '(', 'u', ')', '_<=', '_1', '_||', '_Math', '.', 'abs', '(', 'v', ')', '_<=', '_1', ')', '_{', '_return', '_1', ';', '_}', '_if', '_(', 'u', '_>', '_0', ')', '_{', '_u', '_=', '_-', 'u', ';', '_}', '_if', '_(', 'v', '_>', '_0', ')', '_{', '_v', '_=', '_-', 'v', ';', '_}', '_int', '_k', '_=', '_0', ';', '_while', '_((', 'u', '_&', '_1', ')', '_==', '_0', '_&&', '_(', 'v', '_&', '_1', ')', '_==', '_0', '_&&', '_k', '_<', '_31', ')', '_{', '_u', '_/', '=', '_2', ';', '_v', '_/', '=', '_2', ';', '_k', '++;', '_}', '_if', '_(', 'k', '_==', '_31', ')', '_{', '_throw', '_new', '_Ar', 'ithmetic', 'Exception', '("', 'over', 'flow', ':', '_g', 'cd', '_is', '_2', '^', '31', '");', '_}', '_int', '_t', '_=', '_((', 'u', '_&', '_1', ')', '_==', '_1', ')', '_?', '_v', '_:', '_-', '(', 'u', '_/', '_2', ');', '_do', '_{', '_while', '_((', 't', '_&', '_1', ')', '_==', '_0', ')', '_{', '_t', '_/', '=', '_2', ';', '_}', '_if', '_(', 't', '_>', '_0', ')', '_{', '_u', '_=', '_-', 't', ';', '_}', '_else', '_{', '_v', '_=', '_t', ';', '_}', '_t', '_=', '_(', 'v', '_-', '_u', ')', '_/', '_2', ';', '_}', '_while', '_(', 't', '_!=', '_0', ');', '_return', '_-', 'u', '_*', '_(', '1', '_<<', '_k', ');', '_}', '</s>']
input_ids: 0 22891 25156 6979 3968 40437 37165 354 368 1640 2544 1717 6 6979 748 43 25522 114 36 44853 4 10155 1640 257 43 49230 112 45056 11945 4 10155 1640 705 43 49230 112 43 25522 671 112 131 35524 114 36 257 8061 321 43 25522 1717 5457 111 257 131 35524 114 36 705 8061 321 43 25522 748 5457 111 705 131 35524 6979 449 5457 321 131 150 41006 257 359 112 43 45994 321 48200 36 705 359 112 43 45994 321 48200 449 28696 1105 43 25522 1717 1589 5214 132 131 748 1589 5214 132 131 449 49789 35524 114 36 330 45994 1105 43 25522 3211 92 1586 48961 48847 46469 2137 19322 35 821 28690 16 132 35227 2983 45751 35524 6979 326 5457 41006 257 359 112 43 45994 112 43 17487 748 4832 111 1640 257 1589 132 4397 109 25522 150 41006 90 359 112 43 45994 321 43 25522 326 1589 5214 132 131 35524 114 36 90 8061 321 43 25522 1717 5457 111 90 131 35524 1493 25522 748 5457 326 131 35524 326 5457 36 705 111 1717 43 1589 132 131 35524 150 36 90 49333 321 4397 671 111 257 1009 36 134 48188 449 4397 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
total param 593668
***** Running Training *****
  Num examples = 10
  Num Epochs = 40
  batch size = 32
  Total optimization steps = 40
***** Running evaluation *****
  Num examples = 10
  Batch size = 16
Training/evaluation parameters Namespace(train_data_file='../../../dataset/train_scaled.jsonl', output_dir='./saved_models', model_arch='CodeBERT', eval_data_file='../../../dataset/valid_scaled.jsonl', test_data_file='../../../dataset/test_scaled.jsonl', model_name_or_path='microsoft/codebert-base', tokenizer_name='microsoft/codebert-base', block_size=512, do_train=True, do_eval=False, do_test=False, eval_batch_size=16, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, warmup_steps=0, seed=123456, num_train_epochs=40, num_finetune_epochs=5, train_learning_rate=0.0001, finetune_learning_rate=2e-05, train_batch_size=32, finetune_batch_size=4, n_gpu=0, device=device(type='cpu'))
*** Example ***
label: 2
input_tokens: ['<s>', 'Function', 'Type', '_build', 'And', 'Register', '()', '_{', '_if', '_(', 'return', 'Type', '_==', '_null', ')', '_{', '_return', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'get', 'Native', 'Type', '(', 'UN', 'KNOWN', '_', 'TYPE', ');', '_}', '_if', '_(', 'param', 'eters', 'Node', '_==', '_null', ')', '_{', '_throw', '_new', '_Illegal', 'State', 'Exception', '("', 'All', '_Function', '_types', '_must', '_have', '_params', '_and', '_a', '_return', '_type', '");', '_}', '_Function', 'Type', '_fn', 'Type', ';', '_if', '_(', 'is', 'Construct', 'or', ')', '_{', '_fn', 'Type', '_=', '_get', 'Or', 'Create', 'Construct', 'or', '();', '_}', '_else', '_if', '_(', 'is', 'Interface', ')', '_{', '_fn', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'create', 'Interface', 'Type', '(', 'fn', 'Name', ',', '_source', 'Node', ');', '_if', '_(', 'scope', '.', 'is', 'Global', '()', '_&&', '_!', 'fn', 'Name', '.', 'is', 'Empty', '())', '_{', '_type', 'Reg', 'istry', '.', 'decl', 'are', 'Type', '(', 'fn', 'Name', ',', '_fn', 'Type', '.', 'get', 'Instance', 'Type', '());', '_}', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_else', '_{', '_fn', 'Type', '_=', '_new', '_Function', 'Builder', '(', 'type', 'Reg', 'istry', ').', 'with', 'Name', '(', 'fn', 'Name', ').', 'with', 'Source', 'Node', '(', 'source', 'Node', ').', 'with', 'Par', 'ams', 'Node', '(', 'param', 'eters', 'Node', ').', 'with', 'Return', 'Type', '(', 'return', 'Type', ').', 'with', 'Type', 'Of', 'This', '(', 'this', 'Type', ').', 'with', 'Template', 'Name', '(', 'template', 'Type', 'Name', ').', 'build', '();', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_if', '_(', 'im', 'ple', 'mented', 'Inter', 'faces', '_!=', '_null', ')', '_{', '_fn', 'Type', '.', 'set', 'Im', 'ple', 'mented', 'Inter', 'faces', '(', 'im', 'ple', 'mented', 'Inter', 'faces', ');', '_}', '_type', 'Reg', 'istry', '.', 'clear', 'Template', 'Type', 'Name', '();', '_return', '_fn', 'Type', ';', '_}', '</s>']
input_ids: 0 47802 40118 1119 2409 44539 43048 25522 114 36 30921 40118 45994 23796 43 25522 671 40118 5457 1907 23007 20217 4 6460 45339 40118 1640 4154 47300 1215 48710 4397 35524 114 36 46669 20413 48271 45994 23796 43 25522 3211 92 36993 13360 48847 46469 3684 42419 3505 531 33 49658 8 10 671 1907 45751 35524 42419 40118 48930 40118 131 114 36 354 48402 368 43 25522 48930 40118 5457 120 11094 44758 48402 368 47006 35524 1493 114 36 354 49136 43 25522 48930 40118 5457 1907 23007 20217 4 32845 49136 40118 1640 42441 31723 6 1300 48271 4397 114 36 39576 4 354 18811 43048 48200 27785 42441 31723 4 354 47819 49338 25522 1907 23007 20217 4 32639 1322 40118 1640 42441 31723 6 48930 40118 4 6460 49483 40118 49291 35524 2085 28512 34164 40118 1640 42441 40118 4397 35524 1493 25522 48930 40118 5457 92 42419 45200 1640 12528 23007 20217 322 5632 31723 1640 42441 31723 322 5632 7061 48271 1640 17747 48271 322 5632 22011 7042 48271 1640 46669 20413 48271 322 5632 42555 40118 1640 30921 40118 322 5632 40118 10643 713 1640 9226 40118 322 5632 49522 31723 1640 48790 40118 31723 322 23411 47006 2085 28512 34164 40118 1640 42441 40118 4397 35524 114 36 757 8293 19601 26267 40289 49333 23796 43 25522 48930 40118 4 8738 20470 8293 19601 26267 40289 1640 757 8293 19601 26267 40289 4397 35524 1907 23007 20217 4 18763 49522 40118 31723 47006 671 48930 40118 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 1
input_tokens: ['<s>', 'public', '_boolean', '_is', 'State', 'less', '(', 'Component', '_component', ')', '_{', '_return', '_false', ';', '_}', '</s>']
input_ids: 0 15110 49378 16 13360 1672 1640 48767 7681 43 25522 671 3950 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 3
input_tokens: ['<s>', 'private', '_static', '_int', '_greatest', 'Common', 'Div', 'is', 'or', '(', 'int', '_u', ',', '_int', '_v', ')', '_{', '_if', '_(', 'Math', '.', 'abs', '(', 'u', ')', '_<=', '_1', '_||', '_Math', '.', 'abs', '(', 'v', ')', '_<=', '_1', ')', '_{', '_return', '_1', ';', '_}', '_if', '_(', 'u', '_>', '_0', ')', '_{', '_u', '_=', '_-', 'u', ';', '_}', '_if', '_(', 'v', '_>', '_0', ')', '_{', '_v', '_=', '_-', 'v', ';', '_}', '_int', '_k', '_=', '_0', ';', '_while', '_((', 'u', '_&', '_1', ')', '_==', '_0', '_&&', '_(', 'v', '_&', '_1', ')', '_==', '_0', '_&&', '_k', '_<', '_31', ')', '_{', '_u', '_/', '=', '_2', ';', '_v', '_/', '=', '_2', ';', '_k', '++;', '_}', '_if', '_(', 'k', '_==', '_31', ')', '_{', '_throw', '_new', '_Ar', 'ithmetic', 'Exception', '("', 'over', 'flow', ':', '_g', 'cd', '_is', '_2', '^', '31', '");', '_}', '_int', '_t', '_=', '_((', 'u', '_&', '_1', ')', '_==', '_1', ')', '_?', '_v', '_:', '_-', '(', 'u', '_/', '_2', ');', '_do', '_{', '_while', '_((', 't', '_&', '_1', ')', '_==', '_0', ')', '_{', '_t', '_/', '=', '_2', ';', '_}', '_if', '_(', 't', '_>', '_0', ')', '_{', '_u', '_=', '_-', 't', ';', '_}', '_else', '_{', '_v', '_=', '_t', ';', '_}', '_t', '_=', '_(', 'v', '_-', '_u', ')', '_/', '_2', ';', '_}', '_while', '_(', 't', '_!=', '_0', ');', '_return', '_-', 'u', '_*', '_(', '1', '_<<', '_k', ');', '_}', '</s>']
input_ids: 0 22891 25156 6979 3968 40437 37165 354 368 1640 2544 1717 6 6979 748 43 25522 114 36 44853 4 10155 1640 257 43 49230 112 45056 11945 4 10155 1640 705 43 49230 112 43 25522 671 112 131 35524 114 36 257 8061 321 43 25522 1717 5457 111 257 131 35524 114 36 705 8061 321 43 25522 748 5457 111 705 131 35524 6979 449 5457 321 131 150 41006 257 359 112 43 45994 321 48200 36 705 359 112 43 45994 321 48200 449 28696 1105 43 25522 1717 1589 5214 132 131 748 1589 5214 132 131 449 49789 35524 114 36 330 45994 1105 43 25522 3211 92 1586 48961 48847 46469 2137 19322 35 821 28690 16 132 35227 2983 45751 35524 6979 326 5457 41006 257 359 112 43 45994 112 43 17487 748 4832 111 1640 257 1589 132 4397 109 25522 150 41006 90 359 112 43 45994 321 43 25522 326 1589 5214 132 131 35524 114 36 90 8061 321 43 25522 1717 5457 111 90 131 35524 1493 25522 748 5457 326 131 35524 326 5457 36 705 111 1717 43 1589 132 131 35524 150 36 90 49333 321 4397 671 111 257 1009 36 134 48188 449 4397 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
total param 593668
***** Running Training *****
  Num examples = 10
  Num Epochs = 40
  batch size = 32
  Total optimization steps = 40
***** Running evaluation *****
  Num examples = 10
  Batch size = 16
Training/evaluation parameters Namespace(train_data_file='../../../dataset/train_scaled.jsonl', output_dir='./saved_models', model_arch='CodeBERT', eval_data_file='../../../dataset/valid_scaled.jsonl', test_data_file='../../../dataset/test_scaled.jsonl', model_name_or_path='microsoft/codebert-base', tokenizer_name='microsoft/codebert-base', block_size=512, do_train=True, do_eval=False, do_test=False, eval_batch_size=16, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, warmup_steps=0, seed=123456, num_train_epochs=40, num_finetune_epochs=5, train_learning_rate=0.0001, finetune_learning_rate=2e-05, train_batch_size=32, finetune_batch_size=4, n_gpu=0, device=device(type='cpu'))
*** Example ***
label: 2
input_tokens: ['<s>', 'Function', 'Type', '_build', 'And', 'Register', '()', '_{', '_if', '_(', 'return', 'Type', '_==', '_null', ')', '_{', '_return', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'get', 'Native', 'Type', '(', 'UN', 'KNOWN', '_', 'TYPE', ');', '_}', '_if', '_(', 'param', 'eters', 'Node', '_==', '_null', ')', '_{', '_throw', '_new', '_Illegal', 'State', 'Exception', '("', 'All', '_Function', '_types', '_must', '_have', '_params', '_and', '_a', '_return', '_type', '");', '_}', '_Function', 'Type', '_fn', 'Type', ';', '_if', '_(', 'is', 'Construct', 'or', ')', '_{', '_fn', 'Type', '_=', '_get', 'Or', 'Create', 'Construct', 'or', '();', '_}', '_else', '_if', '_(', 'is', 'Interface', ')', '_{', '_fn', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'create', 'Interface', 'Type', '(', 'fn', 'Name', ',', '_source', 'Node', ');', '_if', '_(', 'scope', '.', 'is', 'Global', '()', '_&&', '_!', 'fn', 'Name', '.', 'is', 'Empty', '())', '_{', '_type', 'Reg', 'istry', '.', 'decl', 'are', 'Type', '(', 'fn', 'Name', ',', '_fn', 'Type', '.', 'get', 'Instance', 'Type', '());', '_}', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_else', '_{', '_fn', 'Type', '_=', '_new', '_Function', 'Builder', '(', 'type', 'Reg', 'istry', ').', 'with', 'Name', '(', 'fn', 'Name', ').', 'with', 'Source', 'Node', '(', 'source', 'Node', ').', 'with', 'Par', 'ams', 'Node', '(', 'param', 'eters', 'Node', ').', 'with', 'Return', 'Type', '(', 'return', 'Type', ').', 'with', 'Type', 'Of', 'This', '(', 'this', 'Type', ').', 'with', 'Template', 'Name', '(', 'template', 'Type', 'Name', ').', 'build', '();', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_if', '_(', 'im', 'ple', 'mented', 'Inter', 'faces', '_!=', '_null', ')', '_{', '_fn', 'Type', '.', 'set', 'Im', 'ple', 'mented', 'Inter', 'faces', '(', 'im', 'ple', 'mented', 'Inter', 'faces', ');', '_}', '_type', 'Reg', 'istry', '.', 'clear', 'Template', 'Type', 'Name', '();', '_return', '_fn', 'Type', ';', '_}', '</s>']
input_ids: 0 47802 40118 1119 2409 44539 43048 25522 114 36 30921 40118 45994 23796 43 25522 671 40118 5457 1907 23007 20217 4 6460 45339 40118 1640 4154 47300 1215 48710 4397 35524 114 36 46669 20413 48271 45994 23796 43 25522 3211 92 36993 13360 48847 46469 3684 42419 3505 531 33 49658 8 10 671 1907 45751 35524 42419 40118 48930 40118 131 114 36 354 48402 368 43 25522 48930 40118 5457 120 11094 44758 48402 368 47006 35524 1493 114 36 354 49136 43 25522 48930 40118 5457 1907 23007 20217 4 32845 49136 40118 1640 42441 31723 6 1300 48271 4397 114 36 39576 4 354 18811 43048 48200 27785 42441 31723 4 354 47819 49338 25522 1907 23007 20217 4 32639 1322 40118 1640 42441 31723 6 48930 40118 4 6460 49483 40118 49291 35524 2085 28512 34164 40118 1640 42441 40118 4397 35524 1493 25522 48930 40118 5457 92 42419 45200 1640 12528 23007 20217 322 5632 31723 1640 42441 31723 322 5632 7061 48271 1640 17747 48271 322 5632 22011 7042 48271 1640 46669 20413 48271 322 5632 42555 40118 1640 30921 40118 322 5632 40118 10643 713 1640 9226 40118 322 5632 49522 31723 1640 48790 40118 31723 322 23411 47006 2085 28512 34164 40118 1640 42441 40118 4397 35524 114 36 757 8293 19601 26267 40289 49333 23796 43 25522 48930 40118 4 8738 20470 8293 19601 26267 40289 1640 757 8293 19601 26267 40289 4397 35524 1907 23007 20217 4 18763 49522 40118 31723 47006 671 48930 40118 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 1
input_tokens: ['<s>', 'public', '_boolean', '_is', 'State', 'less', '(', 'Component', '_component', ')', '_{', '_return', '_false', ';', '_}', '</s>']
input_ids: 0 15110 49378 16 13360 1672 1640 48767 7681 43 25522 671 3950 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 3
input_tokens: ['<s>', 'private', '_static', '_int', '_greatest', 'Common', 'Div', 'is', 'or', '(', 'int', '_u', ',', '_int', '_v', ')', '_{', '_if', '_(', 'Math', '.', 'abs', '(', 'u', ')', '_<=', '_1', '_||', '_Math', '.', 'abs', '(', 'v', ')', '_<=', '_1', ')', '_{', '_return', '_1', ';', '_}', '_if', '_(', 'u', '_>', '_0', ')', '_{', '_u', '_=', '_-', 'u', ';', '_}', '_if', '_(', 'v', '_>', '_0', ')', '_{', '_v', '_=', '_-', 'v', ';', '_}', '_int', '_k', '_=', '_0', ';', '_while', '_((', 'u', '_&', '_1', ')', '_==', '_0', '_&&', '_(', 'v', '_&', '_1', ')', '_==', '_0', '_&&', '_k', '_<', '_31', ')', '_{', '_u', '_/', '=', '_2', ';', '_v', '_/', '=', '_2', ';', '_k', '++;', '_}', '_if', '_(', 'k', '_==', '_31', ')', '_{', '_throw', '_new', '_Ar', 'ithmetic', 'Exception', '("', 'over', 'flow', ':', '_g', 'cd', '_is', '_2', '^', '31', '");', '_}', '_int', '_t', '_=', '_((', 'u', '_&', '_1', ')', '_==', '_1', ')', '_?', '_v', '_:', '_-', '(', 'u', '_/', '_2', ');', '_do', '_{', '_while', '_((', 't', '_&', '_1', ')', '_==', '_0', ')', '_{', '_t', '_/', '=', '_2', ';', '_}', '_if', '_(', 't', '_>', '_0', ')', '_{', '_u', '_=', '_-', 't', ';', '_}', '_else', '_{', '_v', '_=', '_t', ';', '_}', '_t', '_=', '_(', 'v', '_-', '_u', ')', '_/', '_2', ';', '_}', '_while', '_(', 't', '_!=', '_0', ');', '_return', '_-', 'u', '_*', '_(', '1', '_<<', '_k', ');', '_}', '</s>']
input_ids: 0 22891 25156 6979 3968 40437 37165 354 368 1640 2544 1717 6 6979 748 43 25522 114 36 44853 4 10155 1640 257 43 49230 112 45056 11945 4 10155 1640 705 43 49230 112 43 25522 671 112 131 35524 114 36 257 8061 321 43 25522 1717 5457 111 257 131 35524 114 36 705 8061 321 43 25522 748 5457 111 705 131 35524 6979 449 5457 321 131 150 41006 257 359 112 43 45994 321 48200 36 705 359 112 43 45994 321 48200 449 28696 1105 43 25522 1717 1589 5214 132 131 748 1589 5214 132 131 449 49789 35524 114 36 330 45994 1105 43 25522 3211 92 1586 48961 48847 46469 2137 19322 35 821 28690 16 132 35227 2983 45751 35524 6979 326 5457 41006 257 359 112 43 45994 112 43 17487 748 4832 111 1640 257 1589 132 4397 109 25522 150 41006 90 359 112 43 45994 321 43 25522 326 1589 5214 132 131 35524 114 36 90 8061 321 43 25522 1717 5457 111 90 131 35524 1493 25522 748 5457 326 131 35524 326 5457 36 705 111 1717 43 1589 132 131 35524 150 36 90 49333 321 4397 671 111 257 1009 36 134 48188 449 4397 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
total param 593668
***** Running Training *****
  Num examples = 10
  Num Epochs = 40
  batch size = 32
  Total optimization steps = 40
***** Running evaluation *****
  Num examples = 10
  Batch size = 16
Training/evaluation parameters Namespace(train_data_file='../../../dataset/train_scaled.jsonl', output_dir='./saved_models', model_arch='CodeBERT', eval_data_file='../../../dataset/valid_scaled.jsonl', test_data_file='../../../dataset/test_scaled.jsonl', model_name_or_path='microsoft/codebert-base', tokenizer_name='microsoft/codebert-base', block_size=512, do_train=True, do_eval=False, do_test=False, eval_batch_size=16, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, warmup_steps=0, seed=123456, num_train_epochs=40, num_finetune_epochs=5, train_learning_rate=0.0001, finetune_learning_rate=2e-05, train_batch_size=32, finetune_batch_size=4, n_gpu=0, device=device(type='cpu'))
*** Example ***
label: 2
input_tokens: ['<s>', 'Function', 'Type', '_build', 'And', 'Register', '()', '_{', '_if', '_(', 'return', 'Type', '_==', '_null', ')', '_{', '_return', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'get', 'Native', 'Type', '(', 'UN', 'KNOWN', '_', 'TYPE', ');', '_}', '_if', '_(', 'param', 'eters', 'Node', '_==', '_null', ')', '_{', '_throw', '_new', '_Illegal', 'State', 'Exception', '("', 'All', '_Function', '_types', '_must', '_have', '_params', '_and', '_a', '_return', '_type', '");', '_}', '_Function', 'Type', '_fn', 'Type', ';', '_if', '_(', 'is', 'Construct', 'or', ')', '_{', '_fn', 'Type', '_=', '_get', 'Or', 'Create', 'Construct', 'or', '();', '_}', '_else', '_if', '_(', 'is', 'Interface', ')', '_{', '_fn', 'Type', '_=', '_type', 'Reg', 'istry', '.', 'create', 'Interface', 'Type', '(', 'fn', 'Name', ',', '_source', 'Node', ');', '_if', '_(', 'scope', '.', 'is', 'Global', '()', '_&&', '_!', 'fn', 'Name', '.', 'is', 'Empty', '())', '_{', '_type', 'Reg', 'istry', '.', 'decl', 'are', 'Type', '(', 'fn', 'Name', ',', '_fn', 'Type', '.', 'get', 'Instance', 'Type', '());', '_}', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_else', '_{', '_fn', 'Type', '_=', '_new', '_Function', 'Builder', '(', 'type', 'Reg', 'istry', ').', 'with', 'Name', '(', 'fn', 'Name', ').', 'with', 'Source', 'Node', '(', 'source', 'Node', ').', 'with', 'Par', 'ams', 'Node', '(', 'param', 'eters', 'Node', ').', 'with', 'Return', 'Type', '(', 'return', 'Type', ').', 'with', 'Type', 'Of', 'This', '(', 'this', 'Type', ').', 'with', 'Template', 'Name', '(', 'template', 'Type', 'Name', ').', 'build', '();', '_maybe', 'Set', 'Base', 'Type', '(', 'fn', 'Type', ');', '_}', '_if', '_(', 'im', 'ple', 'mented', 'Inter', 'faces', '_!=', '_null', ')', '_{', '_fn', 'Type', '.', 'set', 'Im', 'ple', 'mented', 'Inter', 'faces', '(', 'im', 'ple', 'mented', 'Inter', 'faces', ');', '_}', '_type', 'Reg', 'istry', '.', 'clear', 'Template', 'Type', 'Name', '();', '_return', '_fn', 'Type', ';', '_}', '</s>']
input_ids: 0 47802 40118 1119 2409 44539 43048 25522 114 36 30921 40118 45994 23796 43 25522 671 40118 5457 1907 23007 20217 4 6460 45339 40118 1640 4154 47300 1215 48710 4397 35524 114 36 46669 20413 48271 45994 23796 43 25522 3211 92 36993 13360 48847 46469 3684 42419 3505 531 33 49658 8 10 671 1907 45751 35524 42419 40118 48930 40118 131 114 36 354 48402 368 43 25522 48930 40118 5457 120 11094 44758 48402 368 47006 35524 1493 114 36 354 49136 43 25522 48930 40118 5457 1907 23007 20217 4 32845 49136 40118 1640 42441 31723 6 1300 48271 4397 114 36 39576 4 354 18811 43048 48200 27785 42441 31723 4 354 47819 49338 25522 1907 23007 20217 4 32639 1322 40118 1640 42441 31723 6 48930 40118 4 6460 49483 40118 49291 35524 2085 28512 34164 40118 1640 42441 40118 4397 35524 1493 25522 48930 40118 5457 92 42419 45200 1640 12528 23007 20217 322 5632 31723 1640 42441 31723 322 5632 7061 48271 1640 17747 48271 322 5632 22011 7042 48271 1640 46669 20413 48271 322 5632 42555 40118 1640 30921 40118 322 5632 40118 10643 713 1640 9226 40118 322 5632 49522 31723 1640 48790 40118 31723 322 23411 47006 2085 28512 34164 40118 1640 42441 40118 4397 35524 114 36 757 8293 19601 26267 40289 49333 23796 43 25522 48930 40118 4 8738 20470 8293 19601 26267 40289 1640 757 8293 19601 26267 40289 4397 35524 1907 23007 20217 4 18763 49522 40118 31723 47006 671 48930 40118 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 1
input_tokens: ['<s>', 'public', '_boolean', '_is', 'State', 'less', '(', 'Component', '_component', ')', '_{', '_return', '_false', ';', '_}', '</s>']
input_ids: 0 15110 49378 16 13360 1672 1640 48767 7681 43 25522 671 3950 131 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
*** Example ***
label: 3
input_tokens: ['<s>', 'private', '_static', '_int', '_greatest', 'Common', 'Div', 'is', 'or', '(', 'int', '_u', ',', '_int', '_v', ')', '_{', '_if', '_(', 'Math', '.', 'abs', '(', 'u', ')', '_<=', '_1', '_||', '_Math', '.', 'abs', '(', 'v', ')', '_<=', '_1', ')', '_{', '_return', '_1', ';', '_}', '_if', '_(', 'u', '_>', '_0', ')', '_{', '_u', '_=', '_-', 'u', ';', '_}', '_if', '_(', 'v', '_>', '_0', ')', '_{', '_v', '_=', '_-', 'v', ';', '_}', '_int', '_k', '_=', '_0', ';', '_while', '_((', 'u', '_&', '_1', ')', '_==', '_0', '_&&', '_(', 'v', '_&', '_1', ')', '_==', '_0', '_&&', '_k', '_<', '_31', ')', '_{', '_u', '_/', '=', '_2', ';', '_v', '_/', '=', '_2', ';', '_k', '++;', '_}', '_if', '_(', 'k', '_==', '_31', ')', '_{', '_throw', '_new', '_Ar', 'ithmetic', 'Exception', '("', 'over', 'flow', ':', '_g', 'cd', '_is', '_2', '^', '31', '");', '_}', '_int', '_t', '_=', '_((', 'u', '_&', '_1', ')', '_==', '_1', ')', '_?', '_v', '_:', '_-', '(', 'u', '_/', '_2', ');', '_do', '_{', '_while', '_((', 't', '_&', '_1', ')', '_==', '_0', ')', '_{', '_t', '_/', '=', '_2', ';', '_}', '_if', '_(', 't', '_>', '_0', ')', '_{', '_u', '_=', '_-', 't', ';', '_}', '_else', '_{', '_v', '_=', '_t', ';', '_}', '_t', '_=', '_(', 'v', '_-', '_u', ')', '_/', '_2', ';', '_}', '_while', '_(', 't', '_!=', '_0', ');', '_return', '_-', 'u', '_*', '_(', '1', '_<<', '_k', ');', '_}', '</s>']
input_ids: 0 22891 25156 6979 3968 40437 37165 354 368 1640 2544 1717 6 6979 748 43 25522 114 36 44853 4 10155 1640 257 43 49230 112 45056 11945 4 10155 1640 705 43 49230 112 43 25522 671 112 131 35524 114 36 257 8061 321 43 25522 1717 5457 111 257 131 35524 114 36 705 8061 321 43 25522 748 5457 111 705 131 35524 6979 449 5457 321 131 150 41006 257 359 112 43 45994 321 48200 36 705 359 112 43 45994 321 48200 449 28696 1105 43 25522 1717 1589 5214 132 131 748 1589 5214 132 131 449 49789 35524 114 36 330 45994 1105 43 25522 3211 92 1586 48961 48847 46469 2137 19322 35 821 28690 16 132 35227 2983 45751 35524 6979 326 5457 41006 257 359 112 43 45994 112 43 17487 748 4832 111 1640 257 1589 132 4397 109 25522 150 41006 90 359 112 43 45994 321 43 25522 326 1589 5214 132 131 35524 114 36 90 8061 321 43 25522 1717 5457 111 90 131 35524 1493 25522 748 5457 326 131 35524 326 5457 36 705 111 1717 43 1589 132 131 35524 150 36 90 49333 321 4397 671 111 257 1009 36 134 48188 449 4397 35524 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
total param 593668
***** Running Training *****
  Num examples = 50
  Num Epochs = 40
  batch size = 32
  Total optimization steps = 80
***** Running evaluation *****
  Num examples = 50
  Batch size = 16
  eval_ROC-UAC = 0.5396
  eval_acc = 0.2
  eval_f1 = 0.0961
  eval_f1_perclass = [0.33333333 0.         0.         0.31578947]
  eval_loss = 1.4073
  eval_mcc = -0.0849
  eval_precision = 0.083
  eval_recall = 0.2
  Trigger times reset to 0
  ********************
  Best F1:0.0961
  ********************
Saving model checkpoint to ./saved_models/checkpoint-best-f1/CodeBERT.bin
***** Running evaluation *****
  Num examples = 50
  Batch size = 16
Training/evaluation parameters Namespace(train_data_file='../../../dataset/train_scaled.jsonl', output_dir='./saved_models', model_arch='CodeBERT', eval_data_file='../../../dataset/valid_scaled.jsonl', test_data_file='../../../dataset/test_scaled.jsonl', model_name_or_path='microsoft/codebert-base', tokenizer_name='microsoft/codebert-base', block_size=512, do_train=False, do_eval=False, do_test=True, eval_batch_size=16, weight_decay=0.0, adam_epsilon=1e-08, max_grad_norm=1.0, warmup_steps=0, seed=123456, num_train_epochs=40, num_finetune_epochs=5, train_learning_rate=0.0001, finetune_learning_rate=2e-05, train_batch_size=32, finetune_batch_size=4, n_gpu=0, device=device(type='cpu'))
***** Running Test *****
  Num examples = 50
  Batch size = 16
************ CodeBERT ************
  eval_ROC-UAC = 0.5618301238990894
  eval_acc = 0.24
  eval_f1 = 0.10962962962962963
  eval_f1_perclass = [0.14285714 0.         0.         0.40740741]
  eval_mcc = 0.08263527931052767
  eval_precision = 0.07627906976744186
  eval_recall = 0.24
  test_loss = 1.3708
